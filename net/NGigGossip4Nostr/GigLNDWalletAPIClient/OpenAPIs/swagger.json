{
  "openapi": "3.0.1",
  "info": {
    "title": "GigLNDWalletAPI",
    "version": "1.0"
  },
  "paths": {
    "/gettoken": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates authorisation token guid",
        "description": "Creates a new token Guid that is used for further communication with the API",
        "operationId": "GetToken",
        "parameters": [
          {
            "name": "pubkey",
            "in": "query",
            "description": "public key identifies the API user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidResult"
                }
              }
            }
          }
        }
      }
    },
    "/grantaccessrights": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Grants access rights to the subject.",
        "description": "Grants access rights to the subject. Only authorised users can grant the rights.",
        "operationId": "GrantAccessRights",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessRights",
            "in": "query",
            "description": "Access rights to be granted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/revokeaccessrights": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Revokes access rights from the subject.",
        "description": "Revokes access rights from the subject. Only authorised users can revoke the rights.",
        "operationId": "RevokeAccessRights",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessRights",
            "in": "query",
            "description": "Access rights to be revoked.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/getaccessrights": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Gets access rights to the subject.",
        "description": "Gets access rights to the subject. Only authorised users can grant the rights.",
        "operationId": "GetAccessRights",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication. This is a restricted call and authToken needs to be the token of the authorised user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pubkey",
            "in": "query",
            "description": "Public key of the subject.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/topupandmine6blocks": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Sends satoshis from local BTC wallet to the address (Regtest only), then mines 6 blocks.",
        "description": "Sends satoshis from local BTC wallet to the address (Regtest only), then mines 6 blocks.",
        "operationId": "TopUpAndMine6Blocks",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "bitcoin address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bitcoinAddr",
            "in": "query",
            "description": "number of satoshis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sendtoaddress": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Sends satoshis from local BTC wallet to the address.",
        "description": "Sends satoshis from local BTC wallet to the address.",
        "operationId": "SendToAddress",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "bitcoin address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bitcoinAddr",
            "in": "query",
            "description": "number of satoshis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/generateblocks": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Mines Number of Blocks (Regtest only)",
        "description": "Mines Number of Blocks (Regtest only)",
        "operationId": "GenerateBlocks",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "number of blocks to mine",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blocknum",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/newbitcoinaddress": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates New Bitcoin Address To the Bitcoin Wallet",
        "description": "Creates New Bitcoin Address To the Bitcoin Wallet",
        "operationId": "NewBitcoinAddress",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/getbitcoinwalletballance": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns the Bitcoin Wallet Ballance in Sathoshis",
        "description": "Returns the Bitcoin Wallet Ballance in Sathoshis",
        "operationId": "GetBitcoinWalletBallance",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minConf",
            "in": "query",
            "description": "minimal number of confirmation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int64Result"
                }
              }
            }
          }
        }
      }
    },
    "/getlndwalletballance": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns the Lnd Node Wallet Ballance in Sathoshis",
        "description": "Returns the Lnd Node Wallet Ballance in Sathoshis",
        "operationId": "GetLndWalletBallance",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LndWalletBallanceRetResult"
                }
              }
            }
          }
        }
      }
    },
    "/openreserve": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Opens reserve",
        "description": "Opens reserve",
        "operationId": "OpenReserve",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "number of satoshis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidResult"
                }
              }
            }
          }
        }
      }
    },
    "/closereserve": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Closes Reserve",
        "description": "Closes Reserve",
        "operationId": "CloseReserve",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "reserve id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reserveId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/estimatefee": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Gives Fee Estimate",
        "description": "Gives Fee Estimate",
        "operationId": "EstimateFee",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "bitcoin address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "number of satoshis",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeEstimateRetResult"
                }
              }
            }
          }
        }
      }
    },
    "/getbalance": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Balance of the account",
        "description": "Returns the account balance in Satoshis",
        "operationId": "GetBalance",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int64Result"
                }
              }
            }
          }
        }
      }
    },
    "/getbalancedetails": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Balance details of the account",
        "description": "Returns the account balance details in Satoshis",
        "operationId": "GetBalanceDetails",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBallanceDetailsResult"
                }
              }
            }
          }
        }
      }
    },
    "/newaddress": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "New topup Bitcoin address",
        "description": "Creates a new Bitcoin address that can be used to top-up this lightning network account",
        "operationId": "NewAddress",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/registerpayout": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Register for payout to Chain",
        "description": "Creates new request for payout from wallet to the chain",
        "operationId": "RegisterPayout",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "description": "amount in satoshis",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "btcAddress",
            "in": "query",
            "description": "bitcoin address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txfee",
            "in": "query",
            "description": "transaction fee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidResult"
                }
              }
            }
          }
        }
      }
    },
    "/addinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates a new lightning network invoice",
        "description": "Creates a new lightning network invoice",
        "operationId": "AddInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "description": "The value of this invoice in satoshis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "memo",
            "in": "query",
            "description": "An optional memo to attach along with the invoice. Used for record keeping purposes for the invoice's creator, and will also be set in the description field of the encoded payment request if the description_hash field is not being used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiry",
            "in": "query",
            "description": "Payment request expiry time in seconds.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRetResult"
                }
              }
            }
          }
        }
      }
    },
    "/addhodlinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Creates a new lightning network HODL invoice",
        "description": "Creates a new lightning network HODL invoice",
        "operationId": "AddHodlInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "satoshis",
            "in": "query",
            "description": "The value of this invoice in satoshis.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "hash",
            "in": "query",
            "description": "The hash of the preimage.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memo",
            "in": "query",
            "description": "An optional memo to attach along with the invoice. Used for record keeping purposes for the invoice's creator, and will also be set in the description field of the encoded payment request if the description_hash field is not being used.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiry",
            "in": "query",
            "description": "Payment request expiry time in seconds.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRetResult"
                }
              }
            }
          }
        }
      }
    },
    "/decodeinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Decodes the given payment request and returns its details",
        "description": "Takes an encoded payment request string and attempts to decode it, returning a full description of the conditions encoded within the payment request.",
        "operationId": "DecodeInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentRequest",
            "in": "query",
            "description": "The payment request string to be decoded.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayReqRetResult"
                }
              }
            }
          }
        }
      }
    },
    "/sendpayment": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Sends a payment via lightning network for the given payment request",
        "description": "SendPayment attempts to route a payment described by the passed paymentrequest to the final destination.",
        "operationId": "SendPayment",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentrequest",
            "in": "query",
            "description": "A bare-bones invoice for a payment within the Lightning Network. With the details of the invoice, the sender has all the data necessary to send a payment to the recipient.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "An upper limit on the amount of time we should spend when attempting to fulfill the payment. This is expressed in seconds.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "feelimit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/estimateroutefee": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Estimates Route Fee for a payment via lightning network for the given payment request",
        "description": "Estimates Route Fee for a payment described by the passed paymentrequest to the final destination.",
        "operationId": "EstimateRouteFee",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentrequest",
            "in": "query",
            "description": "A bare-bones invoice for a payment within the Lightning Network. With the details of the invoice, the sender has all the data necessary to send a payment to the recipient.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFeeResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/settleinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "SettleInvoice settles an accepted invoice.",
        "description": "Settles hodl invoice that is identified by the payment hash deliverd from the given preimage.",
        "operationId": "SettleInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preimage",
            "in": "query",
            "description": "Externally discovered pre-image that should be used to settle the hold invoice.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/cancelinvoice": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Cancels the invoice identified by the given payment hash",
        "description": "CancelInvoice cancels a currently open invoice. If the invoice is already canceled, this call will succeed. If the invoice is already settled, it will fail.",
        "operationId": "CancelInvoice",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenthash",
            "in": "query",
            "description": "Hash corresponding to the invoice to cancel.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/getinvoicestate": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns a state of the invoice identified by the given payment hash",
        "description": "Returns a state of the invoice identified by the given payment hash",
        "operationId": "GetInvoiceState",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenthash",
            "in": "query",
            "description": "Hash corresponding to the invoice.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/listinvoices": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns list of all invoices related to the account",
        "description": "Returns list of all invoices related to the account",
        "operationId": "ListInvoices",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRetArrayResult"
                }
              }
            }
          }
        }
      }
    },
    "/listpayments": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns list of all payments related to the account",
        "description": "Returns list of all payments related to the account",
        "operationId": "ListPayments",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentRetArrayResult"
                }
              }
            }
          }
        }
      }
    },
    "/getpaymentstatus": {
      "get": {
        "tags": [
          "GigLNDWalletAPI"
        ],
        "summary": "Returns a status of the payment identified by the given payment hash",
        "description": "Returns a status of the payment identified by the given payment hash",
        "operationId": "GetPaymentStatus",
        "parameters": [
          {
            "name": "authToken",
            "in": "query",
            "description": "Authorisation token for the communication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenthash",
            "in": "query",
            "description": "Hash corresponding to the payment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountBallanceDetails": {
        "type": "object",
        "properties": {
          "allChannelFunds": {
            "type": "integer",
            "format": "int64"
          },
          "allChannelFundsTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedChannelFunds": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedChannelFundsTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "payedOutAmount": {
            "type": "integer",
            "format": "int64"
          },
          "payedOutAmountTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "pendingPayOutAmount": {
            "type": "integer",
            "format": "int64"
          },
          "pendingPayOutAmountTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "allPayOutFunds": {
            "type": "integer",
            "format": "int64"
          },
          "allPayOutFundsTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedPayOutFunds": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedPayOutFundsTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "earnedFromSettledInvoices": {
            "type": "integer",
            "format": "int64"
          },
          "earnedFromSettledInvoicesTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "earnedFromAcceptedOrSettledInvoices": {
            "type": "integer",
            "format": "int64"
          },
          "earnedFromAcceptedOrSettledInvoicesTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "succesfulPayments": {
            "type": "integer",
            "format": "int64"
          },
          "succesfulPaymentsFee": {
            "type": "integer",
            "format": "int64"
          },
          "succesfulPaymentsTxFee": {
            "type": "integer",
            "format": "int64"
          },
          "succesfulOrFlyingPayments": {
            "type": "integer",
            "format": "int64"
          },
          "succesfulOrFlyingPaymentsFee": {
            "type": "integer",
            "format": "int64"
          },
          "succesfulOrFlyingPaymentsTxFee": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AccountBallanceDetailsResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/AccountBallanceDetails"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeeEstimateRet": {
        "type": "object",
        "properties": {
          "feeSat": {
            "type": "integer",
            "format": "int64"
          },
          "satPerVbyte": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FeeEstimateRetResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/FeeEstimateRet"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuidResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Int64Result": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceRet": {
        "required": [
          "amtPaidSat",
          "creationDate",
          "description",
          "descriptionHash",
          "expiry",
          "paymentAddr",
          "paymentHash",
          "paymentRequest",
          "preimage",
          "settleDate",
          "state",
          "valueSat"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHash": {
            "type": "string",
            "nullable": true
          },
          "preimage": {
            "type": "string",
            "nullable": true
          },
          "paymentHash": {
            "type": "string",
            "nullable": true
          },
          "paymentAddr": {
            "type": "string",
            "nullable": true
          },
          "valueSat": {
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "type": "integer",
            "format": "int64"
          },
          "settleDate": {
            "type": "integer",
            "format": "int64"
          },
          "paymentRequest": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "integer",
            "format": "int64"
          },
          "amtPaidSat": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceRetArrayResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceRet"
            },
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceRetResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/InvoiceRet"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LNDWalletErrorCode": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13
        ],
        "type": "integer",
        "format": "int32"
      },
      "LndWalletBallanceRet": {
        "type": "object",
        "properties": {
          "confirmedBalance": {
            "type": "integer",
            "format": "int64"
          },
          "lockedBalance": {
            "type": "integer",
            "format": "int64"
          },
          "reservedBalanceAnchorChan": {
            "type": "integer",
            "format": "int64"
          },
          "totalBalance": {
            "type": "integer",
            "format": "int64"
          },
          "unconfirmedBalance": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LndWalletBallanceRetResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/LndWalletBallanceRet"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayReqRet": {
        "required": [
          "description",
          "descriptionHash",
          "expiry",
          "paymentAddr",
          "paymentHash",
          "timestamp",
          "valueSat"
        ],
        "type": "object",
        "properties": {
          "valueSat": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "expiry": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "descriptionHash": {
            "type": "string",
            "nullable": true
          },
          "paymentHash": {
            "type": "string",
            "nullable": true
          },
          "paymentAddr": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayReqRetResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/PayReqRet"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentRet": {
        "required": [
          "creationTimeNs",
          "feeSat",
          "paymentHash",
          "paymentRequest",
          "status",
          "valueSat"
        ],
        "type": "object",
        "properties": {
          "paymentHash": {
            "type": "string",
            "nullable": true
          },
          "valueSat": {
            "type": "integer",
            "format": "int64"
          },
          "creationTimeNs": {
            "type": "integer",
            "format": "int64"
          },
          "feeSat": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentRequest": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentRetArrayResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentRet"
            },
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Result": {
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouteFeeResponse": {
        "type": "object",
        "properties": {
          "routingFeeMsat": {
            "type": "integer",
            "format": "int64"
          },
          "timeLockDelay": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RouteFeeResponseResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/RouteFeeResponse"
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/LNDWalletErrorCode"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}