name: Build Docker Image Backend

on:
  push:
    branches: [ "main" ]

jobs:
  # build-backend-image:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - # checkout to the repository on the build machine
  #       name: Checkout
  #       uses: actions/checkout@v3
  #     - # login to Docker Hub using the secrets provided
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     # - name: Build the Docker image
  #     #   run: docker build ./net --file ./net/docker/docker_services_build/gigossip_backend.Dockerfile --tag my-image-name:$(date +%s)
  #     - # build the container image and push it to Docker Hub
  #       name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./net
  #         file: ./net/docker/docker_services_build/gigossip_backend.Dockerfile
  #         push: true
  #         tags: awazcognitum/giggossip-backend:latest
  #     - # deploy image
  #       name: restart services
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.REMOTE_HOST }}
  #         username: ${{ secrets.REMOTE_USER }}
  #         key: ${{ secrets.REMOTE_PRIVATE_KEY }}
  #         script: |
  #           whoami
  #           sleep 60
  #           cd /giggossip_dev/gig-gossip/net/docker/
  #           docker compose pull logger_api settler_api wallet_api
  #           docker compose up -d logger_api settler_api wallet_api
  #           cd /giggossip_staging/gig-gossip/net/docker/
  #           docker compose pull logger_api_staging settler_api_staging_1 wallet_api_staging_1
  #           docker compose up -d logger_api_staging settler_api_staging_1 wallet_api_staging_1
  #           sleep 60
  #           docker exec -it giggossip_bitcoin /work/bitcoin/src/bitcoin-cli -datadir=/work/locallnd/.bitcoin loadwallet testwallet
  #           docker exec -it giggossip_bitcoin /work/bitcoin/src/bitcoin-cli -datadir=/work/locallnd/.bitcoin -generate 6
  #           sleep 60
  #           docker restart swag

  build-nuget-packages:
    runs-on: ubuntu-latest
    steps:
      - # checkout to the repository on the build machine
        name: Checkout
        uses: actions/checkout@v3

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    # Create the NuGet package in the folder from the environment variable NuGetDirectory
    - run: cd ${GITHUB_WORKSPACE}/net/NGigGossip4Nostr/CryptoToolkit
    - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}

    - name: Publish NuGet package
      run: |
        foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        }

